---
# This playbook is to check for updates in both RHEL and Ubuntu VMs.
# playbook name: check_for_updates.yml
# Author: Raghu Sundaram
# Organization: Harman
- name: Check for updates
  hosts: all
  become_user: root
  become: true
  gather_facts: true
  ignore_errors: true
  tasks:
   - name: Use subscription manager to check subscription status.
     shell: subscription-manager status
     ignore_errors: true
     when: ansible_facts['distribution'] == "RedHat"
     register: subscription_status
     check_mode: no
   - name: Lock OS version for RHEL
     shell: subscription-manager release --unset
     when: ansible_facts['distribution'] == "RedHat"
     check_mode: no
   - name: Check /boot freespace
     shell: df /tmp --output\=avail | tail -1
     register: boot_freespace
     check_mode: no  
   - name: Check for Kernel updates in RH based VMs
     yum: 
       name: 'kernel'
       state: latest
       update_cache: yes
       update_only: yes
     ignore_errors: true       
     register: kernel_updates
     check_mode: true
     when: ansible_os_family == "RedHat" and boot_freespace.stdout|float is gt 100000
   - debug:
      var:  kernel_updates
     when: ansible_os_family == "RedHat"   
   - name: Check for regular updates in RH based VMs
     yum: 
       name: '*'
       state: latest
       update_cache: yes
       update_only: yes
       exclude: salt*
     ignore_errors: true       
     register: regular_updates
     check_mode: true
     when: ansible_os_family == "RedHat"
   - debug:
      var: regular_updates    
   - name: Enable kernel updates in Ubuntu VMs 
     dpkg_selections:
      name: "{{ item }}"
      selection: install
     loop:
      - linux-generic
      - linux-libc-dev 
      - linux-headers-generic 
      - linux-image-generic 
      - linux-firmware
     check_mode: no
     when: ansible_os_family == "Debian"
   - name: Check for kernel updates in Ubuntu VMs
     apt:
       name: 'linux-generic'
       state: latest
       update_cache: yes
       only_upgrade: yes
       allow_change_held_packages: true
     ignore_errors: true       
     when: ansible_os_family == "Debian" and boot_freespace.stdout|float is gt 100000  
     register: kernel_updates_ubuntu     
     check_mode: yes
   - debug:
      var: kernel_updates_ubuntu
   - name: check for regular updates in Ubuntu VMs
     apt:
       name: '*'
       state: latest
       update_cache: no
       only_upgrade: yes
     ignore_errors: true       
     check_mode: yes
     when: ansible_os_family == "Debian"
     register: regular_updates_ubuntu
   - debug:
      var: regular_updates_ubuntu